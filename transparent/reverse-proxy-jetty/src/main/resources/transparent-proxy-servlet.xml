<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <description>Configuration of a proxy for service defined in proxy.properties</description>

    <context:property-placeholder location="classpath:proxy.properties"/>

    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="*">proxyServletWrappingController</prop>
            </props>
        </property>
    </bean>

    <bean id="proxyServletWrappingController" class="org.springframework.web.servlet.mvc.ServletWrappingController">
        <property name="servletClass">
            <value>org.steelrat.proxy.example.TransparentProxyServlet</value>
        </property>
        <property name="servletName">
            <value>transparent-reverse-proxy</value>
        </property>
        <property name="initParameters">
            <props>
                <!--
                Forward request to the following target:

                Notice that URI gets rewritten similar to the former configuration of OPD Web Server.
                -->
                <prop key="proxyTo">${_PROXY_TO}</prop>
                <!--
                Prefix to strip from the start of the forwarded URI:

                Notice that URI gets rewritten similar to the former configuration of OPD Web Server.
                -->
                <prop key="prefix">${_PROXY_PREFIX}</prop>
                <!--
                Forward the `Host` header as is, e.g. `Host: domain.org:443`
                -->
                <prop key="preserveHost">${_PROXY_PRESERVE_HOST}</prop>
                <!--
                Append the `Via` header with a `Kerberos Service Name` as a value.
                -->
<!--                 <prop key="viaHost">${_PROXY_VIA_HOST}</prop> -->
                <!--
                The max number of threads of Jetty HttpClient's Executor.

                Notice that the configured value reflects anticipated load.
                -->
                <prop key="maxThreads">${_PROXY_CLIENT_MAX_THREADS}</prop>
                <!--
                The max time, in milliseconds, a connection can be idle (that is, without traffic of bytes in either direction).

                Notice that the configured value must be aligned with end end point.
                -->
                <prop key="idleTimeout">${_PROXY_CLIENT_IDLE_TIMEOUT_MILLIS}</prop>
                <!--
                The total timeout for the request/response conversation.

                Notice that the configured value must be aligned with end point.
                -->
                <prop key="timeout">${_PROXY_CLIENT_TOTAL_TIMEOUT_MILLIS}</prop>
            </props>
        </property>
    </bean>
</beans>